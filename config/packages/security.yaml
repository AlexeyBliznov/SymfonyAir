security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        app_admin_provider:
            entity:
                class: App\Entity\Admin
                property: email
    firewalls:

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        #main:
            #lazy: true
            #provider: app_user_provider
            #form_login:
                # "app_login" is the name of the route created previously
                #login_path: app_login
                #check_path: app_login
            #logout:
               # path: app_logout
        admin_secured_area:
            pattern: ^/admin
            #anonymous: ~
            provider: app_admin_provider
            form_login:
                login_path: admin_login
                check_path: admin_login
                default_target_path: admin_home
                always_use_default_target_path: true
                #username_parameter: email
                #password_parameter: password
            #guard:
                #authenticators:
                    #- App\Security\AdminAuthenticator
            logout:
                path: admin_logout
                # where to redirect after logout
                target: /admin/login

        user_secured_area:
            pattern: ^/
            #anonymous: ~
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                #default_target_path: _security.user_secured_area.target_path
                #username_parameter: email
                #password_parameter: password
            logout:
                path: app_logout
                # where to redirect after logout
                target: /login


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin/supervisor, roles: ROLE_SUPERVISOR }
         - { path: ^/admin/checkInManager, roles: ROLE_CHECK_IN_MANAGER }
         - { path: ^/admin/gate, roles: ROLE_GATE_MANAGER }
         - { path: ^/confirmation, roles: ROLE_USER }
    role_hierarchy:
        ROLE_GATE_MANAGER: ROLE_USER
        ROLE_CHECK_IN_MANAGER: ROLE_GATE_MANAGER
        ROLE_SUPERVISOR: ROLE_CHECK_IN_MANAGER

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
